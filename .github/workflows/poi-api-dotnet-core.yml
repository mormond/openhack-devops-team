name: POI API Workflow

env:
  wd_path: apis/poi
  repo_url: docker.pkg.github.com
  resource_group: openhackpf79scm7rg
  webapp_name: openhackpf79scm7poi
  api_name: api-poi

on:
  push:
    branches: [ master ]
    paths: [ apis/poi/** ]
  pull_request:
    branches: [ master ]
    paths: [ apis/poi/** ]

jobs:     
  build:   
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: $env.wd_path

    steps:    
      - uses: actions/checkout@v2
      
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        #with:
          #dotnet-version: 2.1.x

      - name: Install dependencies
        run: dotnet restore
      
      - name: Build
        run: dotnet build --configuration Release --no-restore
      
      - name: Test
        run: dotnet test --no-restore --verbosity normal
        
  log_issue:
    if: ${{ !success() }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Create issue when failed
        id: create-issue
        uses: JasonEtco/create-an-issue@v2
        with:
          filename: .github/ISSUE_TEMPLATE/bug_report.md        
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          name: Build failed
          title: The build failed for ${{ github.workflow }}
             
      - name: Log issue number
        run: 'echo Created issue number ${{ steps.create-issue.outputs.number }}'

  push_to_registry:
    if: ${{ github.ref }} == 'refs/heads/master'
    needs: [build]
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: $env.wd_path/web   
           
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Login to package registry
        run: docker login ${{ env.repo_url }} -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
        
      - name: Build docker image
        run: docker build -t ${{ env.repo_url }}/${{ github.repository }}/$env.api_name:${{ github.run_number }} .

      - name: Push to registry
        run: docker push ${{ env.repo_url }}/${{ github.repository }}/$env.api_name:${{ github.run_number }}

  deploy:
    needs: [push_to_registry]
    name: Deploy to App Service
    runs-on: ubuntu-latest    

    steps:
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} 

      - run: az webapp config container set --docker-registry-server-url https://${{ env.repo_url }} --docker-registry-server-user ${{ github.actor }} --docker-registry-server-password ${{ secrets.PACKAGESPAT }} --resource-group ${{ env.resource_group }} --name ${{ env.webapp_name }}

      - uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.webapp_name }}
          publish-profile: ${{ secrets.POIWEBAPPPUBLISHPROFILE }}
          images: '${{ env.repo_url }}/${{ github.repository }}/$env.api_name:${{ github.run_number }}'
