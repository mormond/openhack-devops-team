name: User Profile Workflow

on:
  push:
    branches: [ master ]
    paths:    [ apis/userprofile/** ]
  pull_request:
    branches: [ master ]
    paths:    [ apis/userprofile/** ]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apis/userprofile  
        
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v1.4.3
        #with:
          # Set always-auth in npmrc
          #always-auth: # optional, default is false
          # Version Spec of the version to use.  Examples: 10.x, 10.15.1, >=10.15.0
          #node-version: # optional, default is 10.x
          # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN
          #registry-url: # optional
          # Optional scope for authenticating against scoped registries
          #scope: # optional
          # Deprecated. Use node-version instead. Will not be supported after October 1, 2019
          #version: # optional

      - run: npm install

      - run: npm run build --if-present

      - run: npm test

  log_issue:
    if: ${{ !success() }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Create issue when failed
        id: create-issue
        uses: JasonEtco/create-an-issue@v2
        with:
          filename: .github/ISSUE_TEMPLATE/bug_report.md        
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          name: Build failed
          title: The build failed for ${{ github.workflow }}
             
      - name: Log issue number
        run: 'echo Created issue number ${{ steps.create-issue.outputs.number }}'

  push_to_registry:
    needs: [build]
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apis/userprofile 
           
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Login to package registry
        run: docker login docker.pkg.github.com -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
        
      - name: Build docker image
        run: docker build -t docker.pkg.github.com/${{ github.repository }}/api-userprofile:${{ github.run_number }} .

      - name: Push to registry
        run: docker push docker.pkg.github.com/${{ github.repository }}/api-userprofile:${{ github.run_number }}
